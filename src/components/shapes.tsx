interface ShapeProps {
  fill?: string;
  size?: number;
  name: "cross" | "circle" | "restart";
}

interface ShapeComponentProps {
  fill?: string;
  size?: number;
}

const Cross = (props: ShapeComponentProps) => {
  const { fill = "light-blue", size = 32 } = props;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M27.681 1.63437C26.5094 0.462798 24.6099 0.4628 23.4383 1.63437L16 9.07271L8.56166 1.63437C7.39009 0.462798 5.49059 0.4628 4.31902 1.63437L1.63437 4.31902C0.462799 5.49059 0.462801 7.39009 1.63437 8.56166L9.07271 16L1.63437 23.4383C0.462798 24.6099 0.4628 26.5094 1.63437 27.681L4.31902 30.3656C5.49059 31.5372 7.39009 31.5372 8.56166 30.3656L16 22.9273L23.4383 30.3656C24.6099 31.5372 26.5094 31.5372 27.681 30.3656L30.3656 27.681C31.5372 26.5094 31.5372 24.6099 30.3656 23.4383L22.9273 16L30.3656 8.56166C31.5372 7.39009 31.5372 5.49059 30.3656 4.31902L27.681 1.63437Z"
        fill={`var(--${fill})`}
      />
    </svg>
  );
};

const Circle = (props: ShapeComponentProps) => {
  const { fill = "light-yellow", size = 32 } = props;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M31.9704 15.8706C31.9704 7.10551 24.8649 0 16.0998 0C7.33476 0 0.229248 7.10551 0.229248 15.8706C0.229248 24.6357 7.33476 31.7412 16.0998 31.7412C24.8649 31.7412 31.9704 24.6357 31.9704 15.8706ZM9.63405 15.8706C9.63405 12.2996 12.5289 9.4048 16.0998 9.4048C19.6708 9.4048 22.5656 12.2996 22.5656 15.8706C22.5656 19.4416 19.6708 22.3364 16.0998 22.3364C12.5289 22.3364 9.63405 19.4416 9.63405 15.8706Z"
        fill={`var(--${fill})`}
      />
    </svg>
  );
};

const Restart = (props: ShapeComponentProps) => {
  const { fill = "silver", size = 32 } = props;
  return (
    <svg viewBox="124.098 174.253 16 16" width={size} height={size}>
      <path
        d="M 139.718 174.253 L 138.213 174.253 C 138.003 174.253 137.833 174.423 137.832 174.633 C 137.832 174.64 137.832 174.646 137.833 174.652 L 137.96 177.279 C 136.466 175.518 134.274 174.504 131.966 174.507 C 127.631 174.507 124.095 178.047 124.098 182.386 C 124.101 186.731 127.623 190.253 131.966 190.253 C 133.914 190.256 135.794 189.532 137.238 188.224 C 137.395 188.084 137.408 187.843 137.268 187.686 C 137.263 187.681 137.258 187.676 137.253 187.671 L 136.175 186.591 C 136.033 186.45 135.806 186.442 135.655 186.574 C 133.34 188.612 129.812 188.386 127.775 186.07 C 125.738 183.753 125.963 180.222 128.279 178.184 C 130.594 176.146 134.122 176.371 136.159 178.688 C 136.319 178.87 136.466 179.062 136.601 179.262 L 133.38 179.108 C 133.17 179.098 132.992 179.26 132.982 179.47 C 132.981 179.476 132.981 179.483 132.981 179.489 L 132.981 180.994 C 132.981 181.204 133.152 181.375 133.362 181.375 L 139.718 181.375 C 139.928 181.375 140.098 181.204 140.098 180.994 L 140.098 174.634 C 140.098 174.423 139.928 174.253 139.718 174.253 Z"
        fill={`var(--${fill})`}
      ></path>
    </svg>
  );
};

export const Shape = ({ name, fill, size }: ShapeProps) => {
  const decideShape = () => {
    switch (name) {
      case "cross":
        return Cross;
      case "circle":
        return Circle;
      case "restart":
        return Restart;
    }
  };

  const ShapeComponent = decideShape();

  return <ShapeComponent fill={fill} size={size} />;
};
